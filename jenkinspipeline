pipeline {
   tools {
        maven 'maven3'
    }
    agent any
    environment {
        registry = "191327398744.dkr.ecr.eu-west-1.amazonaws.com/my-docker-repo"
    }
   
    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/k-Manoj/docker-spring-boot.git']]])     
            }
        }
      stage ('Build') {
          steps {
            sh 'mvn clean install'           
            }
      }
    // Building Docker images
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry 
          dockerImage.tag("$BUILD_NUMBER")
        }
      }
    }

    // Uploading Docker images into AWS ECR
    stage('Login to ECR'){
        steps{
            script{
            sh '''aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 191327398744.dkr.ecr.eu-west-1.amazonaws.com'''
            }
        }
    }
   
    stage('Pushing to ECR') {
     steps{
         script {
                sh 'docker build -t my-docker-repo .'
                sh 'docker tag my-docker-repo:latest 191327398744.dkr.ecr.eu-west-1.amazonaws.com/my-docker-repo:latest'
                sh 'docker push 191327398744.dkr.ecr.eu-west-1.amazonaws.com/my-docker-repo:$BUILD_NUMBER'
            }
        
        }
    }
    
        stage ('Helm Deploy') {
          steps {
            script {
                sh "eksctl create cluster --name demo-eks-$BUILD_NUMBER --region eu-west-1 --nodegroup-name my-nodes --node-type t3.small --managed --nodes 2"
                sh "kubectl create ns helm-deployment-$BUILD_NUMBER"
                sh "helm upgrade first --install mychart --namespace helm-deployment-$BUILD_NUMBER --set image.tag=$BUILD_NUMBER"
                }
            }
        }
    }
}
